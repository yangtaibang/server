package com.yangtaibang.domain.yangtaibang.feed;

import java.util.ArrayList;
import java.util.List;

public class feedsActionCountExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table feeds_action_count
     *
     * @mbggenerated Wed Nov 14 16:42:54 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table feeds_action_count
     *
     * @mbggenerated Wed Nov 14 16:42:54 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table feeds_action_count
     *
     * @mbggenerated Wed Nov 14 16:42:54 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table feeds_action_count
     *
     * @mbggenerated Wed Nov 14 16:42:54 CST 2018
     */
    public feedsActionCountExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table feeds_action_count
     *
     * @mbggenerated Wed Nov 14 16:42:54 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table feeds_action_count
     *
     * @mbggenerated Wed Nov 14 16:42:54 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table feeds_action_count
     *
     * @mbggenerated Wed Nov 14 16:42:54 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table feeds_action_count
     *
     * @mbggenerated Wed Nov 14 16:42:54 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table feeds_action_count
     *
     * @mbggenerated Wed Nov 14 16:42:54 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table feeds_action_count
     *
     * @mbggenerated Wed Nov 14 16:42:54 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table feeds_action_count
     *
     * @mbggenerated Wed Nov 14 16:42:54 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table feeds_action_count
     *
     * @mbggenerated Wed Nov 14 16:42:54 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table feeds_action_count
     *
     * @mbggenerated Wed Nov 14 16:42:54 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table feeds_action_count
     *
     * @mbggenerated Wed Nov 14 16:42:54 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table feeds_action_count
     *
     * @mbggenerated Wed Nov 14 16:42:54 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andNumCmtIsNull() {
            addCriterion("num_cmt is null");
            return (Criteria) this;
        }

        public Criteria andNumCmtIsNotNull() {
            addCriterion("num_cmt is not null");
            return (Criteria) this;
        }

        public Criteria andNumCmtEqualTo(Integer value) {
            addCriterion("num_cmt =", value, "numCmt");
            return (Criteria) this;
        }

        public Criteria andNumCmtNotEqualTo(Integer value) {
            addCriterion("num_cmt <>", value, "numCmt");
            return (Criteria) this;
        }

        public Criteria andNumCmtGreaterThan(Integer value) {
            addCriterion("num_cmt >", value, "numCmt");
            return (Criteria) this;
        }

        public Criteria andNumCmtGreaterThanOrEqualTo(Integer value) {
            addCriterion("num_cmt >=", value, "numCmt");
            return (Criteria) this;
        }

        public Criteria andNumCmtLessThan(Integer value) {
            addCriterion("num_cmt <", value, "numCmt");
            return (Criteria) this;
        }

        public Criteria andNumCmtLessThanOrEqualTo(Integer value) {
            addCriterion("num_cmt <=", value, "numCmt");
            return (Criteria) this;
        }

        public Criteria andNumCmtIn(List<Integer> values) {
            addCriterion("num_cmt in", values, "numCmt");
            return (Criteria) this;
        }

        public Criteria andNumCmtNotIn(List<Integer> values) {
            addCriterion("num_cmt not in", values, "numCmt");
            return (Criteria) this;
        }

        public Criteria andNumCmtBetween(Integer value1, Integer value2) {
            addCriterion("num_cmt between", value1, value2, "numCmt");
            return (Criteria) this;
        }

        public Criteria andNumCmtNotBetween(Integer value1, Integer value2) {
            addCriterion("num_cmt not between", value1, value2, "numCmt");
            return (Criteria) this;
        }

        public Criteria andNumGoodIsNull() {
            addCriterion("num_good is null");
            return (Criteria) this;
        }

        public Criteria andNumGoodIsNotNull() {
            addCriterion("num_good is not null");
            return (Criteria) this;
        }

        public Criteria andNumGoodEqualTo(Integer value) {
            addCriterion("num_good =", value, "numGood");
            return (Criteria) this;
        }

        public Criteria andNumGoodNotEqualTo(Integer value) {
            addCriterion("num_good <>", value, "numGood");
            return (Criteria) this;
        }

        public Criteria andNumGoodGreaterThan(Integer value) {
            addCriterion("num_good >", value, "numGood");
            return (Criteria) this;
        }

        public Criteria andNumGoodGreaterThanOrEqualTo(Integer value) {
            addCriterion("num_good >=", value, "numGood");
            return (Criteria) this;
        }

        public Criteria andNumGoodLessThan(Integer value) {
            addCriterion("num_good <", value, "numGood");
            return (Criteria) this;
        }

        public Criteria andNumGoodLessThanOrEqualTo(Integer value) {
            addCriterion("num_good <=", value, "numGood");
            return (Criteria) this;
        }

        public Criteria andNumGoodIn(List<Integer> values) {
            addCriterion("num_good in", values, "numGood");
            return (Criteria) this;
        }

        public Criteria andNumGoodNotIn(List<Integer> values) {
            addCriterion("num_good not in", values, "numGood");
            return (Criteria) this;
        }

        public Criteria andNumGoodBetween(Integer value1, Integer value2) {
            addCriterion("num_good between", value1, value2, "numGood");
            return (Criteria) this;
        }

        public Criteria andNumGoodNotBetween(Integer value1, Integer value2) {
            addCriterion("num_good not between", value1, value2, "numGood");
            return (Criteria) this;
        }

        public Criteria andNumRepostIsNull() {
            addCriterion("num_repost is null");
            return (Criteria) this;
        }

        public Criteria andNumRepostIsNotNull() {
            addCriterion("num_repost is not null");
            return (Criteria) this;
        }

        public Criteria andNumRepostEqualTo(Integer value) {
            addCriterion("num_repost =", value, "numRepost");
            return (Criteria) this;
        }

        public Criteria andNumRepostNotEqualTo(Integer value) {
            addCriterion("num_repost <>", value, "numRepost");
            return (Criteria) this;
        }

        public Criteria andNumRepostGreaterThan(Integer value) {
            addCriterion("num_repost >", value, "numRepost");
            return (Criteria) this;
        }

        public Criteria andNumRepostGreaterThanOrEqualTo(Integer value) {
            addCriterion("num_repost >=", value, "numRepost");
            return (Criteria) this;
        }

        public Criteria andNumRepostLessThan(Integer value) {
            addCriterion("num_repost <", value, "numRepost");
            return (Criteria) this;
        }

        public Criteria andNumRepostLessThanOrEqualTo(Integer value) {
            addCriterion("num_repost <=", value, "numRepost");
            return (Criteria) this;
        }

        public Criteria andNumRepostIn(List<Integer> values) {
            addCriterion("num_repost in", values, "numRepost");
            return (Criteria) this;
        }

        public Criteria andNumRepostNotIn(List<Integer> values) {
            addCriterion("num_repost not in", values, "numRepost");
            return (Criteria) this;
        }

        public Criteria andNumRepostBetween(Integer value1, Integer value2) {
            addCriterion("num_repost between", value1, value2, "numRepost");
            return (Criteria) this;
        }

        public Criteria andNumRepostNotBetween(Integer value1, Integer value2) {
            addCriterion("num_repost not between", value1, value2, "numRepost");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table feeds_action_count
     *
     * @mbggenerated do_not_delete_during_merge Wed Nov 14 16:42:54 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table feeds_action_count
     *
     * @mbggenerated Wed Nov 14 16:42:54 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}